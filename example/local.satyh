@require: stdja

let-mutable ruby-text <- {}

let-inline ctx \Rt it =
  let () = ruby-text <- it in
  inline-nil

let-inline ctx \Ruby it =
  let main-ib = read-inline ctx it in%先に本文を評価しないと、ルビのテキストが更新されない
  let ruby-ib =
    let r-ctx =
      ctx
      |> set-font-size (get-font-size ctx *' 0.7)
    in
      read-inline r-ctx !ruby-text
  in
  let (main-ib-len,_,_) = get-natural-metrics main-ib in
  let (ruby-ib-len,_,_) = get-natural-metrics ruby-ib in
  let main =
    if main-ib-len >' ruby-ib-len then
      main-ib
    else
      let space = (ruby-ib-len -' main-ib-len) *' 0.5 in
      inline-skip space ++ main-ib ++ inline-skip space
  in
    line-stack-bottom[ruby-ib;main]


let law _ _ _ _ _ body = StdJa.document (|title = {法律}; author = {}; show-title = true; show-toc = false|) body

let-block ctx +LawTitle it = read-inline ctx {LawTitle : #it;} ++ inline-fil |> line-break true true ctx

let-block ctx +LawNum it = read-inline ctx {LawNum : #it;} ++ inline-fil |> line-break true true ctx

let-block ctx +LawBody bt = read-block ctx bt

let-block ctx +EnactStatement it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +TOC bt = block-nil

let-block ctx +TOCLabel it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +TOCPart _ _ bt = read-block ctx bt

let-block ctx +PartTitle it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +TOCChapter _ _ bt = read-block ctx bt

let-block ctx +ChapterTitle it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +ArticleRange it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +MainProvision bt = read-block ctx bt

let-block ctx +Part _ _ _ bt = read-block ctx bt

let-block ctx +Chapter _ _ _ bt = read-block ctx bt

let-block ctx +Article _ _ _ bt = read-block ctx bt

let-block ctx +ArticleTitle it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +ArticleCaption it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +Paragraph b n bt = read-block ctx bt

let-block ctx +ParagraphNum it = read-inline ctx {ParagraphNum : #it;} ++ inline-fil |> line-break true true ctx

let-block ctx +ParagraphCaption it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +ParagraphSentence it = read-inline ctx {ParagraphSentence : #it;} ++ inline-fil |> line-break true true ctx

let-block ctx +Sentence str it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-inline ctx \Sentence str it = read-inline ctx it

let-block ctx +SupplProvision bt = read-block ctx bt

let-block ctx +SupplProvisionLabel it = read-inline ctx {SupplProvisionLabel : #it;} ++ inline-fil |> line-break true true ctx

let-block ctx +Item _ _ _ bt = read-block ctx bt

let-block ctx +ItemTitle it = read-inline ctx it ++ inline-fil |> line-break true true ctx

let-block ctx +ItemSentence bt = read-block ctx bt

let-block ctx +Column bt = read-block ctx bt